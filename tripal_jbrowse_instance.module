<?php
/**
 * @file
 * The JBrowse instance module provides a link to an organisms' jbrowse page.
 */

include drupal_get_path('module', 'tripal_jbrowse_instance') . '/includes/tripal_jbrowse_instance.fields.inc';
include drupal_get_path('module', 'tripal_jbrowse_instance') . '/includes/tripal_jbrowse_instance.form.inc';
include drupal_get_path('module', 'tripal_jbrowse_instance') . '/theme/tripal_jbrowse_instance.theme.inc';


/**
 * Implements hook_permission().
 *
 * Define access permissions.
 */
function tripal_jbrowse_instance_permission() {
  $items = [
    'administer jbrowse links' => [
      'title' => t('Administer Feature URLs'),
      'description' => t('Manage feature urls per organism.'),
    ],
  ];

  return $items;
}

/**
 * Implements hook_menu().
 *
 * Define menu urls and their callbacks.
 *
 * @return mixed
 */
function tripal_jbrowse_instance_menu() {
  $items['admin/tripal/extension/jbrowse_instance'] = [
    'title' => t('JBrowse Link'),
    'description' => t('Manage JBrowse links'),
    'page callback' => 'theme',
    'page arguments' => ['tripal_jbrowse_instance_admin'],
    'access arguments' => ['administer jbrowse links'],
    'type' => MENU_NORMAL_ITEM,
  ];

  $items['admin/tripal/extension/jbrowse_instance/list'] = [
    'title' => t('List'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  ];

  $items['admin/tripal/extension/jbrowse_instance/add'] = [
    'title' => t('Add'),
    'description' => t('Add new feature JBrowse link'),
    'page callback' => 'drupal_get_form',
    'page arguments' => ['tripal_jbrowse_instance_form'],
    'access arguments' => ['administer jbrowse links'],
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  ];

  $items['admin/tripal/extension/jbrowse_instance/edit/%'] = [
    'title' => t('Edit'),
    'description' => t('Edit previous submission'),
    'page callback' => 'drupal_get_form',
    'page arguments' => ['tripal_jbrowse_instance_form', 5],
    'access arguments' => ['administer jbrowse links'],
    'type' => MENU_CALLBACK,
    'weight' => 2,
  ];

  $items['admin/tripal/extension/jbrowse_instance/delete/%'] = [
    'title' => t('Delete'),
    'description' => t('Delete link'),
    'page callback' => 'tripal_jbrowse_instance_delete',
    'page arguments' => [5],
    'access arguments' => ['administer jbrowse links'],
    'type' => MENU_CALLBACK,
    'weight' => 2,
  ];

  return $items;
}

function tripal_jbrowse_block_info() {
  $blocks['tripal_jbrowse_list'] = [
    'info' => 'Tripal JBrowse List',
  ];

  return $blocks;
}

function tripal_jbrowse_block_view($delta = '') {
  $block = [];

  switch ($delta) {
    case 'tripal_jbrowse_list':
      $records = db_query('
        SELECT * 
        FROM {tripal_jbrowse_instance} ti 
        JOIN {chado.organism} o 
        ON ti.organism_id=o.organism_id 
        ORDER BY o.genus, o.species');
      $header = ['Organism Name', 'Link to JBrowse'];
      $rows = [];
      foreach ($records as $record) {
        tripal_jbrowse_instance_parse_link($record);
        $entity_id = chado_get_record_entity_by_table('organism', $record->organism_id);
        // $organism = chado_get_organism(['organism_id' => $record->organism_id]);
        $name = $record->genus . ' ' . $record->species;
        $rows[] = [
          l($name, '/bio_data/' . $entity_id . '?tripal_pane=group_jbrowse', ['html' => TRUE]),
          '<a href="'.$record->link.'" class="btn btn-primary">Launch JBrowse</a>'
        ];
      }
      $block['content'] = theme('table', [
        'header' => $header,
        'rows' => $rows,
      ]);

      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 */
function tripal_jbrowse_instance_theme($existing, $type, $theme, $path) {
  $items = [
    'tripal_jbrowse_instance_pane' => [
      'variables' => ['record' => ''],
      'template' => 'tripal_jbrowse_instance_pane',
      'path' => "{$path}/theme/templates",
    ],
    'tripal_jbrowse_instance_admin' => [
      'template' => 'tripal_jbrowse_instance_admin',
      'path' => "{$path}/theme/templates",
    ],
  ];

  return $items;
}

/**
 * Parse jbrowse links to include tracks.
 *
 * @param $record
 * @param $node
 */
function tripal_jbrowse_instance_parse_link(&$record, $entity = NULL) {
  $type = $entity ? $entity->chado_table : '';
  // Add loc parameters
  if (!empty($record->tracks)) {
    $tracks = json_decode($record->tracks);
    foreach ($tracks as $key => $track) {
      $tracks[$key] = trim($track);
    }

    $tracks = implode(',', $tracks);

    if (strpos($record->link, '?') !== FALSE) {
      $record->link .= "&tracks={$tracks}";
    }
    else {
      $record->link .= "?tracks={$tracks}";
    }
  }

  if ($type === 'feature') {
    $feature_name = $entity->chado_record->uniquename;

    if ($record->regexp) {
      preg_match($record->regexp, $entity->chado_record->uniquename, $matches);
      if (isset($matches[1])) {
        $feature_name = $matches[1];
      }
    }

    $record->link .= "&loc={$feature_name}";
    //$record->link .= "&highlight={$node->feature->uniquename}";
  }
  elseif (!empty($record->default_location)) {
    $record->link .= "&loc={$record->default_location}";
  }
}
